name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: write
  packages: write
  actions: read
  checks: write

env:
  NODE_VERSION: '18'

jobs:
  lint-and-format:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Configure npm authentication
      run: |
        echo "@sudobility:registry=https://registry.npmjs.org/" > ~/.npmrc
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
        echo "always-auth=true" >> ~/.npmrc

    - name: Install dependencies
      shell: bash
      run: |
        rm -f package-lock.json
        npm install

    - name: Run ESLint
      run: npm run lint
      
    - name: TypeScript type check
      run: npm run type-check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Configure npm authentication
      run: |
        echo "@sudobility:registry=https://registry.npmjs.org/" > ~/.npmrc
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
        echo "always-auth=true" >> ~/.npmrc

    - name: Install dependencies
      shell: bash
      run: |
        rm -f package-lock.json
        npm install

    - name: Run tests
      run: npm test -- --run

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Configure npm authentication
      run: |
        echo "@sudobility:registry=https://registry.npmjs.org/" > ~/.npmrc
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
        echo "always-auth=true" >> ~/.npmrc

    - name: Install dependencies
      shell: bash
      run: |
        rm -f package-lock.json
        npm install

    - name: Build package
      run: npm run build
      
    - name: Check build output
      run: |
        ls -la dist/
        test -f dist/index.esm.js
        test -f dist/index.umd.js
        test -f dist/index.d.ts
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Configure npm authentication
      run: |
        echo "@sudobility:registry=https://registry.npmjs.org/" > ~/.npmrc
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
        echo "always-auth=true" >> ~/.npmrc

    - name: Install dependencies
      shell: bash
      run: |
        rm -f package-lock.json
        npm install

    - name: Run security audit
      run: npm audit --audit-level moderate --omit=dev || true

  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    needs: [build, security-audit]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Configure npm authentication
      run: |
        echo "@sudobility:registry=https://registry.npmjs.org/" > ~/.npmrc
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
        echo "always-auth=true" >> ~/.npmrc

    - name: Install dependencies
      run: npm install
      
    - name: Build package
      run: npm run build
      
    - name: Check if version changed
      id: version-check
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        PUBLISHED_VERSION=$(npm view @sudobility/components version 2>/dev/null || echo "0.0.0")
        echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "published-version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
        if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
          echo "version-changed=true" >> $GITHUB_OUTPUT
        else
          echo "version-changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Publish to npm
      if: steps.version-check.outputs.version-changed == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      if: steps.version-check.outputs.version-changed == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version-check.outputs.current-version }}
        name: Release v${{ steps.version-check.outputs.current-version }}
        draft: false
        prerelease: false
        body: |
          ## Changes in v${{ steps.version-check.outputs.current-version }}
          
          See [CHANGELOG.md](./CHANGELOG.md) for detailed changes.
          
          ## Installation

          ```bash
          npm install @sudobility/components@${{ steps.version-check.outputs.current-version }}
          ```
        generate_release_notes: true

  notification:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, build, security-audit]
    if: failure()
    
    steps:
    - name: Send notification
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        text: 'CI/CD Pipeline failed for @sudobility/components'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}